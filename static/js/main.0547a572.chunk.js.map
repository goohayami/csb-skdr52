{"version":3,"sources":["components/InputTodo.jsx","components/IncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","index.js"],"names":["style","backgroundColor","width","height","borderRadius","padding","margin","InputTodo","props","todoText","onChange","onClick","disabled","placeholder","value","IncompleteTodos","todos","onClickComplete","onClickDelete","className","map","todo","index","key","CompleteTodos","onClickBack","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","e","target","newTodos","length","color","newIncompleteTodos","splice","newCompleteTodos","ReactDOM","render","document","getElementById"],"mappings":"mMAEMA,G,MAAQ,CACZC,gBAAiB,UACjBC,MAAO,QACPC,OAAQ,OACRC,aAAc,MACdC,QAAS,MACTC,OAAQ,QAGGC,EAAY,SAACC,GACxB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACrC,OACE,oCACE,yBAAKZ,MAAOA,GACV,2BACEY,SAAUA,EACVC,YAAY,yBACZC,MAAOL,EACPC,SAAUA,IAEZ,4BAAQE,SAAUA,EAAUD,QAASA,GAArC,mBCpBKI,EAAkB,SAACP,GAC9B,IAAQQ,EAA0CR,EAA1CQ,MAAOC,EAAmCT,EAAnCS,gBAAiBC,EAAkBV,EAAlBU,cAChC,OACE,oCACE,yBAAKC,UAAU,eACb,uBAAGA,UAAU,QAAb,gCACA,4BACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,yBAAKC,IAAKF,EAAMF,UAAU,YACxB,4BAAKE,GACL,4BAAQV,QAAS,kBAAMM,EAAgBK,KAAvC,gBACA,4BAAQX,QAAS,kBAAMO,EAAcI,KAArC,wBCZHE,EAAgB,SAAChB,GAC5B,IAAQQ,EAAuBR,EAAvBQ,MAAOS,EAAgBjB,EAAhBiB,YACf,OACE,yBAAKN,UAAU,iBACb,uBAAGA,UAAU,SAAb,0BACA,4BACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,yBAAKC,IAAKF,EAAMF,UAAU,YACxB,4BAAKE,GACL,4BAAQV,QAAS,kBAAMc,EAAYH,KAAnC,uBCNDI,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOlB,EAAP,KAAiBmB,EAAjB,KACA,EAA8CD,mBAAS,IAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,EAA0CH,mBAAS,IAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KAmCA,OACE,oCACE,kBAAC,EAAD,CACEvB,SAAUA,EACVC,SAtCmB,SAACuB,GAAD,OAAOL,EAAYK,EAAEC,OAAOpB,QAuC/CH,QApCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAM0B,EAAQ,sBAAON,GAAP,CAAwBpB,IACtCqB,EAAmBK,GACnBP,EAAY,MAiCRhB,SAAUiB,EAAgBO,QAAU,IAErCP,EAAgBO,QAAU,GACzB,uBAAGpC,MAAO,CAAEqC,MAAO,WAAnB,2EAGF,kBAAC,EAAD,CACErB,MAAOa,EACPZ,gBAhCkB,SAACK,GACvB,IAAMgB,EAAkB,YAAOT,GAC/BS,EAAmBC,OAAOjB,EAAO,GAEjC,IAAMkB,EAAgB,sBAAOT,GAAP,CAAsBF,EAAgBP,KAC5DQ,EAAmBQ,GACnBN,EAAiBQ,IA2BbtB,cAvCgB,SAACI,GACrB,IAAMa,EAAQ,YAAON,GACrBM,EAASI,OAAOjB,EAAO,GACvBQ,EAAmBK,MAsCjB,kBAAC,EAAD,CAAenB,MAAOe,EAAeN,YA1BrB,SAACH,GACnB,IAAMkB,EAAgB,YAAOT,GAC7BS,EAAiBD,OAAOjB,EAAO,GAE/B,IAAMgB,EAAkB,sBAAOT,GAAP,CAAwBE,EAAcT,KAC9DU,EAAiBQ,GACjBV,EAAmBQ,QCrCvBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0547a572.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst style = {\r\n  backgroundColor: \"#c1ffff\",\r\n  width: \"400px\",\r\n  height: \"30px\",\r\n  borderRadius: \"8px\",\r\n  padding: \"8px\",\r\n  margin: \"8px\"\r\n};\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, onClick, disabled } = props;\r\n  return (\r\n    <>\r\n      <div style={style}>\r\n        <input\r\n          disabled={disabled}\r\n          placeholder=\"TODOを入力\"\r\n          value={todoText}\r\n          onChange={onChange}\r\n        />\r\n        <button disabled={disabled} onClick={onClick}>\r\n          追加\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const IncompleteTodos = (props) => {\r\n  const { todos, onClickComplete, onClickDelete } = props;\r\n  return (\r\n    <>\r\n      <div className=\"incomplete \">\r\n        <p className=\"tile\">未完了のTODO</p>\r\n        <ul>\r\n          {todos.map((todo, index) => {\r\n            return (\r\n              <div key={todo} className=\"list-row\">\r\n                <li>{todo}</li>\r\n                <button onClick={() => onClickComplete(index)}>完了</button>\r\n                <button onClick={() => onClickDelete(index)}>削除</button>\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CompleteTodos = (props) => {\r\n  const { todos, onClickBack } = props;\r\n  return (\r\n    <div className=\"complete-area\">\r\n      <p className=\"tile \">完了のTODO</p>\r\n      <ul>\r\n        {todos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onClick={() => onClickBack(index)}>戻す</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTodos } from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n\n  const [completeTodos, setCompleteTodos] = useState([]);\n  const onChangeTodoText = (e) => setTodoText(e.target.value);\n\n  // 追加ボタンを押したときの処理\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n  // 削除ボタンを押したときの処理\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n  // 完了ボタンを押したときの処理\n  const onClickComplete = (index) => {\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(index, 1);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n  // 戻すボタンを押したときの処理\n  const onClickBack = (index) => {\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(index, 1);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n        disabled={incompleteTodos.length >= 5}\n      />\n      {incompleteTodos.length >= 5 && (\n        <p style={{ color: \"tomato\" }}>登録できるTodoは5個までだよ</p>\n      )}\n\n      <IncompleteTodos\n        todos={incompleteTodos}\n        onClickComplete={onClickComplete}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos todos={completeTodos} onClickBack={onClickBack} />\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}