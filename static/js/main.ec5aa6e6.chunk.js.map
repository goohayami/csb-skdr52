{"version":3,"sources":["components/InputTodo.jsx","App.jsx","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","className","placeholder","value","App","useState","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","e","target","newTodos","map","todo","index","key","newIncompleteTodos","splice","newCompleteTodos","onClickComplete","onClickDelete","onClickBack","ReactDOM","render","document","getElementById"],"mappings":"qKAEaA,G,MAAY,SAACC,GACxB,IAAQC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAC5B,OACE,oCACE,yBAAKC,UAAU,cACb,2BAAOC,YAAY,yBAAUC,MAAOL,EAAUC,SAAUA,IACxD,4BAAQC,QAASA,GAAjB,oBCJKI,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOP,EAAP,KAAiBQ,EAAjB,KACA,EAA8CD,mBAAS,IAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,EAA0CH,mBAAS,IAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KAmCA,OACE,oCACE,kBAAC,EAAD,CACEZ,SAAUA,EACVC,SAtCmB,SAACY,GAAD,OAAOL,EAAYK,EAAEC,OAAOT,QAuC/CH,QApCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMe,EAAQ,sBAAON,GAAP,CAAwBT,IACtCU,EAAmBK,GACnBP,EAAY,QAkCV,yBAAKL,UAAU,eACb,uBAAGA,UAAU,QAAb,gCACA,4BACGM,EAAgBO,KAAI,SAACC,EAAMC,GAC1B,OACE,yBAAKC,IAAKF,EAAMd,UAAU,YACxB,4BAAKc,GACL,4BAAQf,QAAS,kBAhCP,SAACgB,GACvB,IAAME,EAAkB,YAAOX,GAC/BW,EAAmBC,OAAOH,EAAO,GAEjC,IAAMI,EAAgB,sBAAOX,GAAP,CAAsBF,EAAgBS,KAC5DR,EAAmBU,GACnBR,EAAiBU,GA0BkBC,CAAgBL,KAAvC,gBACA,4BAAQhB,QAAS,kBAvCT,SAACgB,GACrB,IAAMH,EAAQ,YAAON,GACrBM,EAASM,OAAOH,EAAO,GACvBR,EAAmBK,GAoCgBS,CAAcN,KAArC,sBAMV,yBAAKf,UAAU,iBACb,uBAAGA,UAAU,SAAb,0BACA,4BACGQ,EAAcK,KAAI,SAACC,EAAMC,GACxB,OACE,yBAAKC,IAAI,OAAOhB,UAAU,YACxB,4BAAKc,GACL,4BAAQf,QAAS,kBArCX,SAACgB,GACnB,IAAMI,EAAgB,YAAOX,GAC7BW,EAAiBD,OAAOH,EAAO,GAE/B,IAAME,EAAkB,sBAAOX,GAAP,CAAwBE,EAAcO,KAC9DN,EAAiBU,GACjBZ,EAAmBU,GA+BgBK,CAAYP,KAAnC,wBClEhBQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ec5aa6e6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, onClick } = props;\r\n  return (\r\n    <>\r\n      <div className=\"input-area\">\r\n        <input placeholder=\"TODOを入力\" value={todoText} onChange={onChange} />\r\n        <button onClick={onClick}>追加</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n\n  const [completeTodos, setCompleteTodos] = useState([]);\n  const onChangeTodoText = (e) => setTodoText(e.target.value);\n\n  // 追加ボタンを押したときの処理\n  const onClickAdd = () => {\n    if (todoText === \"\") return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n  // 削除ボタンを押したときの処理\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n  // 完了ボタンを押したときの処理\n  const onClickComplete = (index) => {\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(index, 1);\n\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n  // 戻すボタンを押したときの処理\n  const onClickBack = (index) => {\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(index, 1);\n\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n      />\n      <div className=\"incomplete \">\n        <p className=\"tile\">未完了のTODO</p>\n        <ul>\n          {incompleteTodos.map((todo, index) => {\n            return (\n              <div key={todo} className=\"list-row\">\n                <li>{todo}</li>\n                <button onClick={() => onClickComplete(index)}>完了</button>\n                <button onClick={() => onClickDelete(index)}>削除</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"complete-area\">\n        <p className=\"tile \">完了のTODO</p>\n        <ul>\n          {completeTodos.map((todo, index) => {\n            return (\n              <div key=\"todo\" className=\"list-row\">\n                <li>{todo}</li>\n                <button onClick={() => onClickBack(index)}>戻す</button>\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}